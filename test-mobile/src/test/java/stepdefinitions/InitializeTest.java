package stepdefinitions;

import cucumber.api.java.After;
import cucumber.api.java.Before;
import io.appium.java_client.AppiumDriver;
import io.appium.java_client.MobileElement;
import org.openqa.selenium.remote.DesiredCapabilities;

import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.Properties;

public class InitializeTest {

  protected static AppiumDriver<MobileElement> driver;
  protected static Properties elementIds = new Properties();
  public static String platformSelection = "Ios";  //Select either Android or Ios

  @Before
  public void before() {

    try {

      driver = initializeDriver();
      loadElementIds();

    } catch (MalformedURLException e) {
      e.printStackTrace();
    }

    //Added 1 second wait so that the app loads completely before starting with element identification
    try {
      Thread.sleep(1000);
    } catch (InterruptedException e) {
      e.printStackTrace();
    }
  }

  @After
  public void after() {
    driver.resetApp();
    driver.quit();
  }

  private AppiumDriver<MobileElement> initializeDriver() throws MalformedURLException {
    //Set the Desired Capabilities
    DesiredCapabilities androidCaps = new DesiredCapabilities();
    androidCaps.setCapability("deviceName", "Android Emulator");
    androidCaps.setCapability("udid", "emulator-5554"); //Give Device ID of your mobile phone
    androidCaps.setCapability("platformName", "Android");
    androidCaps.setCapability("platformVersion", "9.0");
    androidCaps.setCapability("appPackage", "com.bookmark.money");
    androidCaps.setCapability("appActivity", "com.zoostudio.moneylover.ui.ActivitySplash");
    androidCaps.setCapability("noReset", "false");

    DesiredCapabilities androidCaps2 = new DesiredCapabilities();
    androidCaps2.setCapability("deviceName", "Android Emulator");
    androidCaps2.setCapability("udid", "emulator-5556"); //Give Device ID of your mobile phone
    androidCaps2.setCapability("platformName", "Android");
    androidCaps2.setCapability("platformVersion", "9.0");
    androidCaps2.setCapability("appPackage", "com.bookmark.money");
    androidCaps2.setCapability("appActivity", "com.zoostudio.moneylover.ui.ActivitySplash");
    androidCaps2.setCapability("noReset", "false");


    //Set the Desired Capabilities for Ios Devices or Simulators
    DesiredCapabilities iosCaps = new DesiredCapabilities();
    iosCaps.setCapability("deviceName", "iPhone 11 Pro Max");
    iosCaps.setCapability("platformName", "iOS");
    iosCaps.setCapability("platformVersion", "13.1");
    iosCaps.setCapability("app", "/Users/beytullah/Documents/sampleapp/sample2/sample2.app");
    iosCaps.setCapability("automationName", "XCUITest");

    /*
        iosCaps.setCapability("udid", "9BD511B1-9DC9-412F-B16F-54F921C301A3"); //Give Device ID of your mobile phone
        iosCaps.setCapability("xcodeOrgId", "<Team ID>");
        iosCaps.setCapability("xcodeSigningId", "iPhone Developer");
        Team ID is a unique 10-character string generated by Apple that is assigned to your
        team You can find your Team ID using your developer account. Sign in to developer.apple.com/account,
        and click Membership in the sidebar.
   */

    //Instantiate Appium Driver

   /* older versions had if statement
    if (platformSelection == "Android") {

      return new AppiumDriver<>(new URL("http://0.0.0.0:4723/wd/hub"), androidCaps);
    } else {
      return new AppiumDriver<>(new URL("http://0.0.0.0:4723/wd/hub"), androidCaps2);
    }
     */
    AppiumDriver driver;
    switch (platformSelection) {
      case "Android":
        driver = new AppiumDriver<>(new URL("http://0.0.0.0:4723/wd/hub"), androidCaps);
        break;
      case "Android2":
        driver = new AppiumDriver<>(new URL("http://0.0.0.0:4723/wd/hub"), androidCaps2);
        break;
      case "Ios":
        driver = new AppiumDriver<>(new URL("http://0.0.0.0:4723/wd/hub"), iosCaps);
        break;
      default:
        throw new IllegalStateException("Unexpected value: " + platformSelection);
    }
    return driver;
  }

  private void loadElementIds() {

    try {
      /* older versions had if statement
      if (platformSelection == "Android") {
        elementIds.load(getClass().getResourceAsStream("/androidIds.properties"));
      } else {
        elementIds.load(getClass().getResourceAsStream("/androidIds2.properties"));
      }
      */
      switch (platformSelection) {
        case "Android":
          elementIds.load(getClass().getResourceAsStream("/androidIds.properties"));
          break;
        case "Android2":
          elementIds.load(getClass().getResourceAsStream("/androidIds2.properties"));
          break;
        case "Ios":
          elementIds.load(getClass().getResourceAsStream("/iosIds.properties"));
          break;
        default:
          throw new IllegalStateException("Unexpected value: " + platformSelection);
      }
    } catch (IOException e) {
      e.printStackTrace();
    }
  }

}

